% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_files.R
\name{find_files}
\alias{find_files}
\title{Find Files on Disk}
\usage{
find_files(
  file_names = NA,
  path = ".",
  pattern = ".*\\\\.[RrSs]$|.*\\\\.[RrSs]nw$",
  all_files = TRUE,
  recursive = TRUE,
  ignore_case = FALSE,
  find_all = FALSE
)
}
\arguments{
\item{file_names}{character vector of file names (to be checked if the files
exist).}

\item{path}{see \code{\link{list.files}}.}

\item{pattern}{see \code{\link{list.files}}.}

\item{all_files}{see \code{\link{list.files}}, argument \code{all.files}.}

\item{recursive}{see \code{\link{list.files}}.}

\item{ignore_case}{see \code{\link{list.files}}, argument \code{ignore.case}.}

\item{find_all}{Throw an error if not all files (given by \emph{file_names}
are found?}
}
\value{
a character vector of file names.
}
\description{
Look for files on disk, either scanning a vector of names or searching for
files with \code{\link{list.files}} and throw an error if no files are found.
}
\note{
This is merely a wrapper around \code{\link{file.exists}} or
      \code{\link{list.files}}, depending on whether \emph{file_names} is
      given.
}
\examples{
#\% create some files
files <- unname(sapply(file.path(tempdir(), paste0(sample(letters, 10),
                                              ".", c("R", "Rnw", "txt"))),
                       touch))
print(files)
print(list.files(tempdir(), full.names = TRUE)) # same as above
#\% file names given
find_files(file_names = files[1:3])
##\% some do not exist:
find_files(file_names = c(files[1:3], replicate(2, tempfile())))
try(find_files(file_names = c(files[1:3], replicate(2, tempfile())),
               find_all = TRUE))
##\% all do not exist:
try(find_files(file_names = replicate(2, tempfile())))
#\% path given
find_files(path = tempdir())
##\% change pattern
find_files(path = tempdir(),
           pattern = ".*\\\\.[RrSs]$|.*\\\\.[RrSs]nw$|.*\\\\.txt")
##\% find a specific file by it's basename
find_files(path = tempdir(), pattern = paste0("^", basename(files[1]), "$"))
#\% file_names and path given: file_names beats path
try(find_files(file_names = tempfile(), path = tempdir()))
}
